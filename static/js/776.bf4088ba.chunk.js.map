{"version":3,"file":"static/js/776.bf4088ba.chunk.js","mappings":"mLA+BA,MA/BA,YAA+B,IAAZA,EAAW,EAAXA,QACjB,OACE,gBAAKC,UAAU,qDAAf,UACE,iBAAKA,UAAU,mBAAmBC,MAAO,CAAEC,SAAU,YAArD,WACE,iBAAKF,UAAU,qCAAf,WACE,gBAAKA,UAAU,6BAAf,UACE,cAAGG,KAAMJ,EAAQK,gBAAiBC,OAAO,SAASC,IAAI,aAAtD,UACE,gBAAKC,IAAKR,EAAQS,aAAcR,UAAU,2BAA2BS,IAAI,aAG7E,iBAAKT,UAAU,oDAAf,WACE,eAAIA,UAAU,6BAAd,SAA4CD,EAAQW,gBACpD,uBAAIX,EAAQY,kBACZ,uBAAIZ,EAAQa,oBACZ,uBAEIb,EAAQc,aAAaC,KAAI,SAACC,EAAMC,GAC9B,OAAO,cAAeb,KAAMY,EAAKE,eAAgBZ,OAAO,SAASa,MAAOH,EAAKI,UAAWb,IAAI,aAArF,UAAkG,gBAAKN,UAAU,UAAUO,IAAKQ,EAAKK,gBAAiBX,IAAI,aAAlJO,EAChB,aAKT,gBAAKhB,UAAU,6BAAf,UACE,gBAAKA,UAAU,8DAKxB,E,qECpBYqB,EAAe,CACxB,CACIb,a,0DACAJ,gBAAiB,+CACjBkB,K,yjEACAZ,aAAc,gBACdC,eAAgB,+GAChBC,iBAAkB,6CAClBC,aAAc,CACV,CACIO,gBAAiBG,EACjBN,eAAgB,+CAChBE,UAAW,uBAEf,CACIC,gBAAiBI,EACjBP,eAAgB,6CAChBE,UAAW,2BAIvB,CACIX,a,2DACAJ,gBAAiB,6CACjBM,aAAc,aACdC,eAAgB,wHAChBC,iBAAkB,gCAClBC,aAAc,CACV,CACIO,gBAAiBG,EACjBN,eAAgB,6CAChBE,UAAW,uBAGf,CACIC,gBAAiBI,EACjBP,eAAgB,6CAChBE,UAAW,2BAKvB,CACIX,a,4DACAE,aAAc,yBACdN,gBAAiB,oGACjBO,eAAgB,iIAChBC,iBAAkB,+BAClBC,aAAc,CACV,CACIO,gBAAiBI,EACjBP,eAAgB,oGAChBE,UAAW,4BCxDrBM,EAAqB,CACvBC,kBAAmB,UACnBC,mBAAmB,8BAGR,SAASC,IACpB,IAAMC,EAAW,IAAIC,sBAAqB,SAACC,GACvCA,EAAQC,SAAQ,SAACC,GACTA,EAAMC,gBACND,EAAM5B,OAAO8B,UAAUC,IAAI,OAElC,GACJ,IAOD,OALAC,EAAAA,EAAAA,YAAU,WACiBC,SAASC,iBAAiB,SAClCP,SAAQ,SAACQ,GAAD,OAAaX,EAASY,QAAQD,EAA9B,GAC1B,GAAE,KAGC,gBAAKE,GAAG,OAAR,UACI,iBAAK1C,UAAU,YAAf,WACI,SAAC2C,EAAA,EAAD,CAAaC,KAAMnB,IAEfJ,EAAaP,KAAI,SAACf,EAASiB,GACvB,OAAO,SAAC,EAAD,CAAqBjB,QAASA,EAAS8C,SAAU7B,IAAUK,EAAayB,OAAS,GAAnE9B,EACxB,QAKpB,C,mCCzBD,IAXA,YAAgC,IAAT4B,EAAQ,EAARA,KACnB,OACI,gBAAK5C,UAAU,0CAAf,UACI,iBAAKA,UAAU,SAAf,WACI,eAAIA,UAAU,sBAAd,UAAoC,0BAAO4C,EAAKlB,uBAChD,eAAI1B,UAAU,uBAAd,SAAsC4C,EAAKjB,yBAI1D,C","sources":["components/projects/Project.js","components/projects/projectData.js","components/projects/Projects.js","components/sectionInfo/SectionInfo.js"],"sourcesContent":["function Project({ project }) {\r\n  return (\r\n    <div className='row justify-content-center my-3 project-card hide '>\r\n      <div className='col-12 col-md-10' style={{ position: 'relative' }}>\r\n        <div className=\"row g-0 justify-content-around m-3\">\r\n          <div className=\"col-md-5 align-self-center\">\r\n            <a href={project.projectImageUrl} target=\"_blank\" rel=\"noreferrer\">\r\n              <img src={project.projectImage} className=\"img-fluid  project-image\" alt=\"...\" />\r\n            </a>\r\n          </div>\r\n          <div className=\"col-md-6 align-self-center p-3 shadow text-center\">\r\n            <h2 className=\"project-title mt-3 mt-md-0\">{project.projectTitle}</h2>\r\n            <p>{project.projectContent}</p>\r\n            <p>{project.projectTechStack}</p>\r\n            <p>\r\n              {\r\n                project.projectLinks.map((item, index) => {\r\n                  return <a key={index} href={item.projectLinkUrl} target=\"_blank\" title={item.iconTitle} rel=\"noreferrer\"><img className='my-icon' src={item.projectLinkIcon} alt='Loading' /></a>\r\n                })\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-2 col-md-1 project-card__separator my-3 my-md-5\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Project ","import github from '../../assets/github.png'\r\nimport live from '../../assets/live.png';\r\nimport star from '../../assets/star.png';\r\nimport youtube_snip from '../../assets/youtube_snip_.png'\r\nimport getplaced_snip from '../../assets/getplaced_snip.JPG'\r\nimport classifier_snip from '../../assets/classifier_snip.jpg'\r\n\r\n\r\n\r\nexport const projectsData = [\r\n    {\r\n        projectImage: youtube_snip,\r\n        projectImageUrl: 'https://sachin-malik.github.io/Youtube_Clone',\r\n        star: star,\r\n        projectTitle: \"Youtube-Clone\",\r\n        projectContent: \"Pixel perfect clone of Youtube's UI and Search and Play Functionality that can handle 1000 concurrent users.\",\r\n        projectTechStack: \"React.JS, Redux, YouTubeAPI & Github Pages\",\r\n        projectLinks: [\r\n            {\r\n                projectLinkIcon: live,\r\n                projectLinkUrl: 'https://sachin-malik.github.io/Youtube_Clone',\r\n                iconTitle: 'Check out Live Demo',\r\n            },\r\n            {\r\n                projectLinkIcon: github,\r\n                projectLinkUrl: 'https://sachin-malik.github.io/Get-Placed/',\r\n                iconTitle: 'Check out GitHub Repo',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        projectImage: getplaced_snip,\r\n        projectImageUrl: 'https://sachin-malik.github.io/Get-Placed/',\r\n        projectTitle: \"Get Placed\",\r\n        projectContent: \"A web application written in vanilla stack which provides resources for student to help them to ace their placements.\",\r\n        projectTechStack: \"HTML, CSS, Jquery & Bootstrap\",\r\n        projectLinks: [\r\n            {\r\n                projectLinkIcon: live,\r\n                projectLinkUrl: 'https://sachin-malik.github.io/Get-Placed/',\r\n                iconTitle: 'Check out Live Demo',\r\n\r\n            },\r\n            {\r\n                projectLinkIcon: github,\r\n                projectLinkUrl: 'https://github.com/Sachin-Malik/Get-Placed',\r\n                iconTitle: 'Check out GitHub Repo',\r\n\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        projectImage: classifier_snip,\r\n        projectTitle: \"Music Genre Classifier\",\r\n        projectImageUrl: 'https://github.com/Sachin-Malik/Music-Genre-Classifier/tree/master/Music%20Genre%20Classification',\r\n        projectContent: \"A machine learning model (ANN) that classifies music audio files into 1 of 10 catergory using their frequency level features  \",\r\n        projectTechStack: \"Python, ANN, Librosa & GTZan\",\r\n        projectLinks: [\r\n            {\r\n                projectLinkIcon: github,\r\n                projectLinkUrl: 'https://github.com/Sachin-Malik/Music-Genre-Classifier/tree/master/Music%20Genre%20Classification',\r\n                iconTitle: 'Check out GitHub Repo',\r\n\r\n            }\r\n        ]\r\n    }\r\n]","import { useEffect } from 'react';\r\nimport Project from './Project'\r\nimport SectionInfo from '../sectionInfo/SectionInfo'\r\nimport { projectsData } from './projectData'\r\nimport './projectsStyle.css'\r\nconst projectSectionInfo = {\r\n    sectionInfoHeader: 'My Work',\r\n    sectionInfoContent: `Projects I'm most proud of`\r\n}\r\n\r\nexport default function Projects() {\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add('show');\r\n            }\r\n        })\r\n    })\r\n\r\n    useEffect(() => {\r\n        const hiddenElements = document.querySelectorAll('.hide');\r\n        hiddenElements.forEach((element) => observer.observe(element));\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"work\">\r\n            <div className='space-100'>\r\n                <SectionInfo data={projectSectionInfo} />\r\n                {\r\n                    projectsData.map((project, index) => {\r\n                        return <Project key={index} project={project} lastCard={index === projectsData.length - 1} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","function SectionInfo({ data }) {\r\n    return (\r\n        <div className='row justify-content-center mt-5 mb-md-4'>\r\n            <div className='col-10'>\r\n                <h2 className='section-info-header'><span>{data.sectionInfoHeader}</span></h2>\r\n                <h5 className='section-info-content'>{data.sectionInfoContent}</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionInfo;"],"names":["project","className","style","position","href","projectImageUrl","target","rel","src","projectImage","alt","projectTitle","projectContent","projectTechStack","projectLinks","map","item","index","projectLinkUrl","title","iconTitle","projectLinkIcon","projectsData","star","live","github","projectSectionInfo","sectionInfoHeader","sectionInfoContent","Projects","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","classList","add","useEffect","document","querySelectorAll","element","observe","id","SectionInfo","data","lastCard","length"],"sourceRoot":""}